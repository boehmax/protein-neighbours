install.packages("tidyverse")
install.packages('reactable')
# convert data frame into list with protein as index
data %>%
split(.$sample) %>%
map( ~lm(abs ~ time, data = .x)) %>%
map(~summary(.x))
source("~/Documents/R/activity_assay.R", echo=TRUE)
library(tidyverse)
library(broom)
library(palmerpenguins)
install.packages()
install.packages('palmerpenguins')
library(palmerpenguins)
theme_set(theme_light())
data("penguins")
d <- penguins
d %>%
head()
group_fit <- d %>%
split(.$species) %>%
# map() makes a list of outputs
map(~ lm(bill_length_mm ~ flipper_length_mm + body_mass_g + sex, data = .x)) %>%
# map_dfr() converts the list into a data frame of model coefficients, using tidy()
map_dfr(~ tidy(.), .id = 'species')
group_fit
group_fit %>%
filter(term != "(Intercept)") %>%
ggplot(aes(x = estimate, y = species)) +
geom_point(aes(fill = species),
color = "black",
shape = 21,
size = 4) +
geom_errorbar(aes(xmin = estimate - 2*std.error, xmax = estimate + 2*std.error, color = species),
width = 0.1) +
facet_wrap(~term, scales = "free")
data_fit <- data %>%
split(.$sample) %>%
map( ~lm(abs ~ time, data = .x)) %>%
# map_dfr() converts the list into a data frame of model coefficients, using tidy()
map_dfr(~ tidy(.), .id = 'species')
data_fit %>%
filter(term != "(Intercept)") %>%
ggplot(aes(x = estimate, y = species)) +
geom_point(aes(fill = species),
color = "black",
shape = 21,
size = 4) +
geom_errorbar(aes(xmin = estimate - 2*std.error, xmax = estimate + 2*std.error, color = species),
width = 0.1) +
facet_wrap(~term, scales = "free")
data_fit <- data %>%
split(.$protin) %>%
map( ~lm(abs ~ time+ (1/sample), data = .x)) %>%
# map_dfr() converts the list into a data frame of model coefficients, using tidy()
map_dfr(~ tidy(.), .id = 'species')
data_fit <- data %>%
split(.$protein) %>%
map( ~lm(abs ~ time+ (1/sample), data = .x)) %>%
# map_dfr() converts the list into a data frame of model coefficients, using tidy()
map_dfr(~ tidy(.), .id = 'species')
data_fit %>%
filter(term != "(Intercept)") %>%
ggplot(aes(x = estimate, y = protein)) +
geom_point(aes(fill = protein),
color = "black",
shape = 21,
size = 4) +
geom_errorbar(aes(xmin = estimate - 2*std.error, xmax = estimate + 2*std.error, color = protein),
width = 0.1) +
facet_wrap(~term, scales = "free")
data_fit
data_fit <- data %>%
split(.$protein) %>%
map( ~lm(abs ~ time+ (1/sample), data = .x)) %>%
# map_dfr() converts the list into a data frame of model coefficients, using tidy()
map_dfr(~ tidy(.), .id = 'protein')
data_fit %>%
filter(term != "(Intercept)") %>%
ggplot(aes(x = estimate, y = protein)) +
geom_point(aes(fill = protein),
color = "black",
shape = 21,
size = 4) +
geom_errorbar(aes(xmin = estimate - 2*std.error, xmax = estimate + 2*std.error, color = protein),
width = 0.1) +
facet_wrap(~term, scales = "free")
data_fit <- data %>%
split(.$sample) %>%
map( ~lm(abs ~ time, data = .x)) %>%
# map_dfr() converts the list into a data frame of model coefficients, using tidy()
map_dfr(~ tidy(.), .id = 'protein')
data_fit %>%
filter(term != "(Intercept)") %>%
ggplot(aes(x = estimate, y = protein)) +
geom_point(aes(fill = protein),
color = "black",
shape = 21,
size = 4) +
geom_errorbar(aes(xmin = estimate - 2*std.error, xmax = estimate + 2*std.error, color = protein),
width = 0.1) +
facet_wrap(~term, scales = "free")
data_fit
data_fit
data_fit <- data %>%
split(.$sample) %>%
map( ~lm(abs ~ time, data = .x)) %>%
# map_dfr() converts the list into a data frame of model coefficients, using tidy()
map_dfr(~ tidy(.), .id = 'sample')
data_fit %>%
filter(term != "(Intercept)") %>%
ggplot(aes(x = estimate, y = protein)) +
geom_point(aes(fill = protein),
color = "black",
shape = 21,
size = 4) +
geom_errorbar(aes(xmin = estimate - 2*std.error, xmax = estimate + 2*std.error, color = protein),
width = 0.1) +
facet_wrap(~term, scales = "free")
data_fit %>%
filter(term != "(Intercept)") %>%
ggplot(aes(x = estimate, y = protein)) +
geom_point(aes(fill = protein),
color = "black",
shape = 21,
size = 4) +
geom_errorbar(aes(xmin = estimate - 2*std.error, xmax = estimate + 2*std.error, color = sample),
width = 0.1) +
facet_wrap(~term, scales = "free")
data_fit %>%
filter(term != "(Intercept)") %>%
ggplot(aes(x = estimate, y = protein)) +
geom_point(aes(fill = protein),
color = "black",
shape = 21,
size = 4) +
geom_errorbar(aes(xmin = estimate - 2*std.error, xmax = estimate + 2*std.error, color = sample),
width = 0.1) +
facet_wrap(~term, scales = "free")
data_fit <- data %>%
split(.$protein) %>%
map( ~lm(abs ~ time + (1/sample), data = .x)) %>%
# map_dfr() converts the list into a data frame of model coefficients, using tidy()
map_dfr(~ tidy(.), .id = 'protein')
data_fit %>%
filter(term != "(Intercept)") %>%
ggplot(aes(x = estimate, y = protein)) +
geom_point(aes(fill = protein),
color = "black",
shape = 21,
size = 4) +
geom_errorbar(aes(xmin = estimate - 2*std.error, xmax = estimate + 2*std.error, color = sample),
width = 0.1) +
facet_wrap(~term, scales = "free")
data_fit %>%
filter(term != "(Intercept)") %>%
ggplot(aes(x = estimate, y = protein)) +
geom_point(aes(fill = protein),
color = "black",
shape = 21,
size = 4) +
geom_errorbar(aes(xmin = estimate - 2*std.error, xmax = estimate + 2*std.error, color = protein),
width = 0.1) +
facet_wrap(~term, scales = "free")
data_fit
calculate_activity <- function(slope){
slope*4*420
}
data_fit %>%
filter(term != "(Intercept)") %>%
mutate(activity = calculate_activity(estimate))%>%
mutate(activity.std.error = calculate_activity(std.error))%>%
ggplot(aes(x = estimate, y = protein)) +
geom_point(aes(fill = protein),
color = "black",
shape = 21,
size = 4) +
geom_errorbar(aes(xmin = estimate - 2*std.error, xmax = estimate + 2*std.error, color = protein),
width = 0.1) +
facet_wrap(~term, scales = "free")
data_fit %>%
filter(term != "(Intercept)") %>%
mutate(activity = calculate_activity(estimate))%>%
mutate(activity.std.error = calculate_activity(std.error))%>%
ggplot(aes(x = activity, y = protein)) +
geom_point(aes(fill = protein),
color = "black",
shape = 21,
size = 4) +
geom_errorbar(aes(xmin = activity - 2*activity.std.error, xmax = activity + 2*activity.std.error, color = protein),
width = 0.1) +
facet_wrap(~term, scales = "free")
data_fit %>%
filter(term != "(Intercept)") %>%
mutate(activity = calculate_activity(estimate))%>%
mutate(activity.std.error = calculate_activity(std.error))%>%
ggplot(aes(x = activity, y = protein)) +
geom_bar(aes(fill = protein),
color = "black",
shape = 21,
size = 4) +
geom_errorbar(aes(xmin = activity - 2*activity.std.error, xmax = activity + 2*activity.std.error, color = protein),
width = 0.1) +
facet_wrap(~term, scales = "free")
data_fit %>%
filter(term != "(Intercept)") %>%
mutate(activity = calculate_activity(estimate))%>%
mutate(activity.std.error = calculate_activity(std.error))%>%
ggplot(aes(x = activity, y = protein)) +
geom_bar(aes(fill = protein),
color = "black",
size = 4) +
geom_errorbar(aes(xmin = activity - 2*activity.std.error, xmax = activity + 2*activity.std.error, color = protein),
width = 0.1) +
facet_wrap(~term, scales = "free")
?stat_count
data_fit %>%
filter(term != "(Intercept)") %>%
mutate(activity = calculate_activity(estimate))%>%
mutate(activity.std.error = calculate_activity(std.error))%>%
ggplot(aes(x = activity, y = protein)) +
geom_col(aes(fill = protein),
color = "black",
size = 4) +
geom_errorbar(aes(xmin = activity - 2*activity.std.error, xmax = activity + 2*activity.std.error, color = protein),
width = 0.1) +
facet_wrap(~term, scales = "free")
data_fit %>%
filter(term != "(Intercept)") %>%
mutate(activity = calculate_activity(estimate))%>%
mutate(activity.std.error = calculate_activity(std.error))%>%
ggplot(aes(x = activity, y = protein)) +
geom_col(aes(fill = protein)) +
geom_errorbar(aes(xmin = activity - 2*activity.std.error, xmax = activity + 2*activity.std.error, color = protein),
width = 0.1) +
facet_wrap(~term, scales = "free")
data_fit %>%
filter(term != "(Intercept)") %>%
mutate(activity = calculate_activity(estimate))%>%
mutate(activity.std.error = calculate_activity(std.error))%>%
ggplot(aes(x = activity, y = protein)) +
geom_col(aes(fill = protein)) +
geom_errorbar(aes(xmin = activity - 2*activity.std.error, xmax = activity + 2*activity.std.error, color = 'gray'),
width = 0.1) +
facet_wrap(~term, scales = "free")
data_fit %>%
filter(term != "(Intercept)") %>%
mutate(activity = calculate_activity(estimate))%>%
mutate(activity.std.error = calculate_activity(std.error))%>%
ggplot(aes(x = activity, y = protein)) +
geom_col(aes(fill = protein)) +
geom_errorbar(aes(xmin = activity - 2*activity.std.error, xmax = activity + 2*activity.std.error),
width = 0.1) +
facet_wrap(~term, scales = "free")
install.packages(c(
"tidyverse", "ape", "dplyr", "gggenes", "ggplot2",
"RColorBrewer", "yaml", "purrr", "readr", "stringr",
"tidyr", "withr", "reshape2", "rmarkdown", "knitr",
"logger", "DT", "plotly"
))
getwd()
setwd("bioinformatics/protein-neighbours/config/")
getwd()
setwd("..")
getwd()
source("main.R")
results <- main()
source("main.R")
results <- main()
source("main.R")
results <- main()
source("main.R")
results <- main()
source("main.R")
results <- main()
source("main.R")
results <- main()
source("main.R")
results <- main()
results <- main()
source("main.R")
source("main.R")
results <- main()
source("main.R")
results <- main()
